{"ast":null,"code":"var _jsxFileName = \"/Users/bryanetzine/Taskforce/taskforce/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaPaperPlane } from 'react-icons/fa'; // Importing the paper plane icon from react-icons\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const examplePrompts = [\"Analyze the latest market trends for Nvidia, ServiceNow, and AMD and summarize key factors that could influence their stock performance in the upcoming quarter.\", \"Generate a template for a monthly newsletter that highlights company updates, industry news, and features a spotlight on a standout employee or customer story.\", \"Develop a week-long itinerary for a business trip to New York City that balances client meetings, networking events, and personal downtime effectively.\", \"Outline the steps required to migrate a small business's customer database from a local server to a cloud-based solution, ensuring minimal service disruption.\"];\n  const submitData = (prompt = input) => {\n    setIsLoading(true);\n    setData(\"\");\n    fetch('http://127.0.0.1:5000/api/generate', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        prompt\n      })\n    }).then(response => response.json()).then(response => {\n      // Here, handle the generated agents and tasks\n      // For now, just displaying the response\n      setData(JSON.stringify(response));\n      setIsLoading(false);\n    }).catch(err => {\n      setData(\"There was an error processing your request.\");\n      setIsLoading(false);\n    });\n  };\n  const executeAgentsTasks = agentsAndTasks => {\n    fetch('http://127.0.0.1:5000/api/execute', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(agentsAndTasks)\n    }).then(response => response.json()).then(response => {\n      // Handle the execution response here\n      console.log(response);\n    }).catch(err => console.error(\"Error: \", err));\n  };\n  const setExampleInputAndSubmit = prompt => {\n    setInput(prompt);\n    submitData(prompt);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Response-area\",\n      children: isLoading ? 'Loading...' : data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4BbHc8e411hzqw1h/lmzDHt0wkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FaPaperPlane","jsxDEV","_jsxDEV","App","_s","data","setData","input","setInput","isLoading","setIsLoading","examplePrompts","submitData","prompt","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","executeAgentsTasks","agentsAndTasks","console","log","error","setExampleInputAndSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bryanetzine/Taskforce/taskforce/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FaPaperPlane } from 'react-icons/fa'; // Importing the paper plane icon from react-icons\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const examplePrompts = [\n    \"Analyze the latest market trends for Nvidia, ServiceNow, and AMD and summarize key factors that could influence their stock performance in the upcoming quarter.\",\n    \"Generate a template for a monthly newsletter that highlights company updates, industry news, and features a spotlight on a standout employee or customer story.\",\n    \"Develop a week-long itinerary for a business trip to New York City that balances client meetings, networking events, and personal downtime effectively.\",\n    \"Outline the steps required to migrate a small business's customer database from a local server to a cloud-based solution, ensuring minimal service disruption.\"\n  ];\n\n  const submitData = (prompt = input) => {\n    setIsLoading(true);\n    setData(\"\");\n    fetch('http://127.0.0.1:5000/api/generate', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n      },\n      body: JSON.stringify({ prompt })\n    })\n    .then(response => response.json())\n    .then(response => {\n      // Here, handle the generated agents and tasks\n      // For now, just displaying the response\n      setData(JSON.stringify(response));\n      setIsLoading(false);\n    })\n    .catch(err => {\n      setData(\"There was an error processing your request.\");\n      setIsLoading(false);\n    });\n  }\n\n  const executeAgentsTasks = (agentsAndTasks) => {\n    fetch('http://127.0.0.1:5000/api/execute', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n      },\n      body: JSON.stringify(agentsAndTasks)\n    })\n    .then(response => response.json())\n    .then(response => {\n      // Handle the execution response here\n      console.log(response);\n    })\n    .catch(err => console.error(\"Error: \", err));\n  };\n\n  const setExampleInputAndSubmit = (prompt) => {\n    setInput(prompt);\n    submitData(prompt);\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ...rest of your React component */}\n      <div className=\"Response-area\">{isLoading ? 'Loading...' : data}</div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB,CAAC,CAAC;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,cAAc,GAAG,CACrB,kKAAkK,EAClK,iKAAiK,EACjK,yJAAyJ,EACzJ,gKAAgK,CACjK;EAED,MAAMC,UAAU,GAAGA,CAACC,MAAM,GAAGN,KAAK,KAAK;IACrCG,YAAY,CAAC,IAAI,CAAC;IAClBJ,OAAO,CAAC,EAAE,CAAC;IACXQ,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN;MAAO,CAAC;IACjC,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA;MACAf,OAAO,CAACY,IAAI,CAACC,SAAS,CAACE,QAAQ,CAAC,CAAC;MACjCX,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAI;MACZlB,OAAO,CAAC,6CAA6C,CAAC;MACtDI,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,kBAAkB,GAAIC,cAAc,IAAK;IAC7CZ,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,cAAc;IACrC,CAAC,CAAC,CACDN,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAM,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAIG,OAAO,CAACE,KAAK,CAAC,SAAS,EAAEL,GAAG,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMM,wBAAwB,GAAIjB,MAAM,IAAK;IAC3CL,QAAQ,CAACK,MAAM,CAAC;IAChBD,UAAU,CAACC,MAAM,CAAC;EACpB,CAAC;EAED,oBACEX,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAElB9B,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEvB,SAAS,GAAG,YAAY,GAAGJ;IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAAChC,EAAA,CA9DQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}