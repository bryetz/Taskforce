{"ast":null,"code":"var _jsxFileName = \"/Users/bryanetzine/Taskforce/taskforce/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const examplePrompts = [\"Suggest some codenames for a project introducing flexible work arrangements.\", \"Recommend activities for a team-building day with remote employees.\", \"Explain airplane turbulence to someone who has never flown before.\", \"Give me ideas for what to do with my kids' art.\"];\n  const submitData = () => {\n    setIsLoading(true);\n    setData(\"\");\n    fetch('http://127.0.0.1:5000/api', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify(input)\n    }).then(response => response.text()).then(response => {\n      setData(response);\n      setIsLoading(false);\n    }).catch(err => {\n      setData(\"There was an error processing your request.\");\n      setIsLoading(false);\n    });\n  };\n  const setExampleInput = prompt => {\n    setInput(prompt);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How can I help you today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Prompt-buttons\",\n      children: examplePrompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setExampleInput(prompt),\n        className: \"Prompt-button\",\n        children: prompt\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"Input-area\",\n      placeholder: \"Or type your question here...\",\n      rows: 4,\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Submit-button\",\n      onClick: submitData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Response-area\",\n      children: isLoading ? 'Loading...' : data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4BbHc8e411hzqw1h/lmzDHt0wkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","input","setInput","isLoading","setIsLoading","examplePrompts","submitData","fetch","method","headers","body","JSON","stringify","then","response","text","catch","err","setExampleInput","prompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","placeholder","rows","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/bryanetzine/Taskforce/taskforce/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const examplePrompts = [\n    \"Suggest some codenames for a project introducing flexible work arrangements.\",\n    \"Recommend activities for a team-building day with remote employees.\",\n    \"Explain airplane turbulence to someone who has never flown before.\",\n    \"Give me ideas for what to do with my kids' art.\"\n  ];\n\n  const submitData = () => {\n    setIsLoading(true);\n    setData(\"\");\n    fetch('http://127.0.0.1:5000/api', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n      },\n      body: JSON.stringify(input)\n    })\n    .then(response => response.text())\n    .then(response => {\n      setData(response);\n      setIsLoading(false);\n    })\n    .catch(err => {\n      setData(\"There was an error processing your request.\");\n      setIsLoading(false);\n    });\n  }\n\n  const setExampleInput = (prompt) => {\n    setInput(prompt);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>How can I help you today?</h1>\n      </header>\n      <div className=\"Prompt-buttons\">\n        {examplePrompts.map((prompt, index) => (\n          <button key={index} onClick={() => setExampleInput(prompt)} className=\"Prompt-button\">\n            {prompt}\n          </button>\n        ))}\n      </div>\n      <textarea \n        className=\"Input-area\"\n        placeholder=\"Or type your question here...\" \n        rows={4} \n        value={input} \n        onChange={e => setInput(e.target.value)}\n      />\n      <button className=\"Submit-button\" onClick={submitData}>Submit</button>\n      <div className=\"Response-area\">{isLoading ? 'Loading...' : data}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}